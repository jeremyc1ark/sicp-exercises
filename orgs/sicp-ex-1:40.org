*Exercise 1.40:* Define a procedure `cubic' that can be used
together with the `newtons-method' procedure in expressions of the
form

    (newtons-method (cubic a b c) 1)

to approximate zeros of the cubic x^3 + ax^2 + bx + c.

#+begin_src scheme
  (define tolerance 0.00001)

  (define (fixed-point f first-guess)
    (define (close-enough? v1 v2)
      (< (abs (- v1 v2)) tolerance))
    (define (try guess)
      (let ([next (f guess)])
        (if (close-enough? guess next)
            next
            (try next))))
    (try first-guess))

  (define dx 0.00001)

  (define (deriv g)
    (lambda (x)
      (/ (- (g (+ x dx)) (g x))
         dx)))

  (define (newton-transform g)
    (lambda (x)
      (- x (/ (g x) ((deriv g) x)))))

  (define (newtons-method g guess)
    (fixed-point (newton-transform g) guess))

  (define (cubic a b c)
    (lambda (x)
      (+ (expt x 3) (* a (sqr x)) (* b x) c)))

  (newtons-method (cubic -2.0 6.0 3.0) 1.0)
#+end_src

#+RESULTS:
: -0.4264532440007858

I checked this on a calculator and it is correct.
