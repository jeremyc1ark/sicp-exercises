*Exercise 2.55:* Eva Lu Ator types to the interpreter the
expression

    (car ''abracadabra)

To her surprise, the interpreter prints back `quote'.  Explain.

Because Scheme uses an applicative order interpreter, it will want to break the argument of ~car~ down first. It sees ~'~, which translates into:

#+begin_src scheme :results silent
(car (quote 'abracadabra))
#+end_src

This is then translated to:

#+begin_src scheme :results silent
(car (quote (quote abracadabra)))
#+end_src

~(quote abracadabra)~ is already surrounded by another ~quote~, so it is not an expression but rather a list of quoted symbols, where the ~car~ is ~'quote~.
