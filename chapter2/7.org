*Exercise 2.7:* Alyssa's program is incomplete because she has not
specified the implementation of the interval abstraction.  Here is
a definition of the interval constructor:

    (define (make-interval a b) (cons a b))

Define selectors `upper-bound' and `lower-bound' to complete the
implementation.

#+begin_src scheme :results list
  (define (make-interval a b) (cons a b))

  (define (lower-bound interval) (car interval))
  (define (upper-bound interval) (cdr interval))

  (let ([interval (make-interval 5 9)])
    (list (lower-bound interval) (upper-bound interval)))
#+end_src

#+RESULTS:
- 5
- 9
