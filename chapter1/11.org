*Exercise 1.11:* A function f is defined by the rule that f(n) = n
if n<3 and f(n) = f(n - 1) + 2f(n - 2) + 3f(n - 3) if n>= 3.
Write a procedure that computes f by means of a recursive process.
Write a procedure that computes f by means of an iterative
process.

#+begin_src scheme :results list :session ex-1:11
  (define (f-recur n)
    (if (> 3 n)
        n
        (+
         (f-recur (sub1 n))
         (* 2 (f-recur (- n 2)))
         (* 3 (f-recur (- n 3)))))
    )

  (define (f-iter n)
    (define (iter a b c count)
      (if (= count 0)
          a
          (iter b c (+ c (* 2 b) (* 3 a)) (- count 1))))
    (if (> 3 n)
        n
        (iter 0 1 2 n))
    )

  (list (f-recur 8) (f-iter 8))
#+end_src

#+RESULTS:
- 335
- 335

